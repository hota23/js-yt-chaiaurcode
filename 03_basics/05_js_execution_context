global execution context(this)
functin execution context
eval execution context

js code is executed in two phases
1. memory creation phase(creation phase)
2. execution phase

code example: 
     let val1 = 10
     let val2 = 5
     function addNum(num1, num2){
        let total = num1 + num2
        return total
     }
     let result1 = addNum(val1, val2)
     let result2 = addNum(10, 2)

steps:
1. global execution -> this

2. memory phase
    val1 -> undefined
    val2 -> undefined
    addNum -> definition
    result1 -> undefined
    result2 -> undefined

3. execution phase
    val1 <- 10
    val2 <- 5
    addNum --> [(new variable environment)+(execution thread)]
                --> memory phase
                    val1 -> undefined
                    val2 -> undefined
                    total -> undefined
                 -> execution phase
                    num1 -> 10
                    num2 -> 5
                    total -> 15
               (this execution context is deleted after all this) 
    result1 <- 15
    addNum --> [(NVE)+(ET)]
                --> memory phase
                    val1 -> undefined
                    val2 -> undefined
                    total -> undefined
                 -> execution phase
                    num1 -> 10
                    num2 -> 2
                    total -> 12
               (this execution context is deleted after all this)
    result2 <- 12


*lifo- last in first out
callstack